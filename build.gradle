buildscript {
    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION")
        classpath("org.jetbrains.kotlin:kotlin-serialization:$KOTLIN_SERIALIZATION_VERSION")
        classpath("com.android.tools.build:gradle:$ANDROID_GRADLE_PLUGIN_VERSION")
    }
}

plugins {
    id 'com.android.application' version "$ANDROID_APPLICATION_PLUGIN" apply false
    id 'com.android.library' version "$ANDROID_LIBRARY_PLUGIN" apply false
    id 'org.jetbrains.kotlin.android' version "$KOTLIN_ANDROID_PLUGIN" apply false
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "${GRADLE_NEXUS_PUBLISH_PLUGIN_VERSION}"
}

apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply plugin: 'maven-publish'
apply plugin: 'signing'

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
            packageGroup = "com.braze"
            if (isReleaseBuild.toBoolean()) {
                def secureProps = new Properties()
                rootProject.file(findProperty("MAVEN_CENTRAL_SONATYPE_SECRETS_FILEPATH")).withInputStream { secureProps.load(it) }
                username = secureProps["sonatype.username"]
                password = secureProps["sonatype.password"]
            }
        }
    }
}
